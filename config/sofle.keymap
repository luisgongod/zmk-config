/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;// <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings =
                <&kp>,
                <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49>;// <---[[right-hand keys]]
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_par_R {
            bindings = <&kp EQUAL>;
            key-positions = <19 20>;
        };

        combo_Par_L {
            bindings = <&kp PLUS>;
            key-positions = <21 20>;
        };

        combo_brack_L {
            bindings = <&kp MINUS>;
            key-positions = <22 21>;
        };

        combo_brack_R {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
        };

        combo_brace_L {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
        };

        combo_brace_R {
            bindings = <&kp COLON>;
            key-positions = <33 34>;
        };

        equal {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <45 46>;
        };

        enter {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <47 46>;
        };

        Dot_Backslash {
            bindings = <&sk UNDERSCORE>;
            key-positions = <47 48>;
        };

        Q_W {
            bindings = <&kp CARET>;
            key-positions = <13 14>;
        };

        W_E {
            bindings = <&kp AMPERSAND>;
            key-positions = <14 15>;
        };

        E_R {
            bindings = <&kp EXCLAMATION>;
            key-positions = <15 16>;
        };

        A_S {
            bindings = <&kp ESCAPE>;
            key-positions = <25 26>;
        };

        S_D {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
        };

        D_F {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <27 28>;
        };

        Z_X {
            bindings = <&kp AT>;
            key-positions = <37 38>;
        };

        X_C {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <38 39>;
        };

        C_V {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <40 39>;
        };

        U_I_O {
            bindings = <&kp ASTERISK>;
            key-positions = <19 20 21>;
        };

        I_O_P {
            bindings = <&kp PERCENT>;
            key-positions = <20 21 22>;
        };

        W_E_R {
            bindings = <&kp CARET>;
            key-positions = <14 15 16>;
        };

        Q_W_E {
            bindings = <&kp PIPE>;
            key-positions = <15 13 14>;
        };

        M_Coma_Dot {
            bindings = <&kp HASH>;
            key-positions = <45 46 47>;
        };

        Coma_Dot_Slash {
            bindings = <&kp QUESTION>;
            key-positions = <46 47 48>;
        };

        Z_X_C {
            bindings = <&kp TILDE>;
            key-positions = <37 38 39>;
        };

        J_K_L {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <31 32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
           &gresc  &kp F1        &kp F2        &kp F3            &kp F4          &kp F5                                &kp PAGE_DOWN  &kp PG_UP  &kp PAGE_DOWN     &kp PG_UP  &kp BACKSPACE     &kp DELETE
          &kp TAB   &kp Q         &kp W         &kp E             &kp R           &kp T                                        &kp Y      &kp U          &kp I         &kp O          &kp P  &kp BACKSLASH
   &kp LEFT_SHIFT   &kp A         &kp S         &kp D             &kp F           &kp G                                        &kp H      &kp J          &kp K         &kp L       &kp SEMI        &kp SQT
 &kp LEFT_CONTROL   &kp Z         &kp X         &kp C             &kp V           &kp B  &kp C_MUTE  &kp C_PLAY_PAUSE          &kp N      &kp M      &kp COMMA       &kp DOT       &kp FSLH      &kp ENTER
                           &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT       &mo 1             &mo 2      &kp SPACE    &kp TAB       &kp LALT  &kp LEFT_WIN
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN_ARROW &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
 &trans   &trans   &trans  &trans  &trans   &trans                        &trans        &trans        &trans        &trans        &trans  &trans
 &trans   &kp F1   &kp F2  &kp F3  &kp F4   &kp F5                      &kp PLUS  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK  &trans
 &trans   &kp F6   &kp F7  &kp F8  &kp F9  &kp F10                     &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6     &kp SLASH  &trans
 &trans  &kp F11  &kp F12  &trans  &trans   &trans  &trans  &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3       &kp DOT  &trans
                   &trans  &trans  &trans   &trans  &trans  &trans        &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4                     &trans         &trans      &trans      &trans            &trans    &trans
     &trans        &trans        &trans   &kp K_CMENU  &kp PRINTSCREEN        &trans                   &kp HOME  &kp PAGE_DOWN      &kp UP   &kp PG_UP           &kp END   &kp DEL
     &trans        &trans        &trans       &kp INS          &kp DEL        &trans                   &kp PLUS       &kp LEFT    &kp DOWN   &kp RIGHT  &kp LEFT_CONTROL  &kp BSPC
     &trans    &kp K_UNDO     &kp K_CUT    &kp K_COPY      &kp K_PASTE        &trans  &trans  &trans  &kp MINUS     &kp C_PREV  &kp C_PREV  &kp C_NEXT            &trans    &trans
                                 &trans        &trans           &trans        &trans  &trans  &trans     &trans         &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
