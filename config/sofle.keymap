/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        U_I {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <19 20>;
        };

        I_O {
            bindings = <&kp EQUAL>;
            key-positions = <21 20>;
        };

        O_P {
            bindings = <&kp QUESTION>;
            key-positions = <22 21>;
        };

        J_K {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
        };

        K_L {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
        };

        L_Semi {
            bindings = <&kp BACKSLASH>;
            key-positions = <33 34>;
        };

        M_Coma {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <45 46>;
        };

        Coma_Dot {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <47 46>;
        };

        Dot_Backslash {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <47 48>;
        };

        Q_W {
            bindings = <&kp TILDE>;
            key-positions = <13 14>;
        };

        W_E {
            bindings = <&kp HASH>;
            key-positions = <14 15>;
        };

        E_R {
            bindings = <&kp UNDER>;
            key-positions = <15 16>;
        };

        A_S {
            bindings = <&kp AMPS>;
            key-positions = <25 26>;
        };

        S_D {
            bindings = <&kp ESC>;
            key-positions = <26 27>;
        };

        D_F {
            bindings = <&kp COLON>;
            key-positions = <27 28>;
        };

        Z_X {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <37 38>;
        };

        X_C {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <38 39>;
        };

        C_V {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <40 39>;
        };

        U_I_O {
            bindings = <&kp ASTRK>;
            key-positions = <19 20 21>;
        };

        I_O_P {
            bindings = <&kp GRAVE>;
            key-positions = <20 21 22>;
        };

        W_E_R {
            bindings = <&kp PIPE>;
            key-positions = <14 15 16>;
        };

        Q_W_E {
            bindings = <&kp CARET>;
            key-positions = <15 13 14>;
        };

        M_Coma_Dot {
            bindings = <&kp GREATER_THAN>;
            key-positions = <45 46 47>;
        };

        Coma_Dot_Slash {
            bindings = <&kp SLASH>;
            key-positions = <46 47 48>;
        };

        Z_X_C {
            bindings = <&kp LEFT_WIN>;
            key-positions = <37 38 39>;
        };

        R_T {
            bindings = <&kp AT>;
            key-positions = <17 16>;
        };

        F_G {
            bindings = <&kp MINUS>;
            key-positions = <28 29>;
        };

        V_B {
            bindings = <&kp EXCL>;
            key-positions = <41 40>;
        };

        Y_U {
            bindings = <&kp PERCENT>;
            key-positions = <18 19>;
        };

        H_J {
            bindings = <&kp PLUS>;
            key-positions = <30 31>;
        };

        N_M {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <44 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
           &gresc  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4    &kp NUMBER_5                                &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0      &kp DELETE
          &kp TAB         &kp Q         &kp W         &kp E             &kp R           &kp T                                       &kp Y         &kp U          &kp I         &kp O         &kp P   &kp BACKSLASH
   &kp LEFT_SHIFT         &kp A         &kp S         &kp D             &kp F           &kp G                                       &kp H         &kp J          &kp K         &kp L      &kp SEMI  &kp LEFT_SHIFT
 &kp LEFT_CONTROL         &kp Z         &kp X         &kp C             &kp V           &kp B  &kp C_MUTE  &kp C_PLAY_PAUSE         &kp N         &kp M      &kp COMMA       &kp DOT      &kp FSLH       &kp ENTER
                                 &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT       &mo 1             &mo 2     &kp SPACE       &kp TAB  &kp PAGE_DOWN   &kp PAGE_UP
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN_ARROW &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
 &trans   &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans   &trans  &trans
 &trans   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
 &trans  &kp F11   &none   &none   &none   &none                   &none   &none   &none   &none    &none  &trans
 &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans   &none   &none   &none   &none    &none  &trans
                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
 &trans      &trans     &trans       &trans           &trans  &trans                     &trans         &trans      &trans     &trans          &trans  &trans
 &trans      &trans     &trans  &kp K_CMENU  &kp PRINTSCREEN  &trans                   &kp PLUS  &kp PAGE_DOWN      &kp UP  &kp PG_UP          &trans  &trans
 &trans      &trans     &trans      &kp INS          &kp DEL  &trans                  &kp MINUS       &kp LEFT    &kp DOWN  &kp RIGHT  &kp LEFT_SHIFT  &trans
 &trans  &kp K_UNDO  &kp K_CUT   &kp K_COPY      &kp K_PASTE  &trans  &trans  &trans     &trans       &kp HOME  &kp C_PREV    &kp END          &trans  &trans
                        &trans       &trans           &trans  &trans  &trans  &trans     &trans         &trans      &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW &inc_dec_kp PG_UP PG_DN>;
        };

        Layer__3 {
            bindings = <
 &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans                  &trans      &trans  &trans      &trans  &trans  &bt BT_CLR
 &trans        &trans        &trans        &trans  &trans  &trans                  &trans      &trans  &trans      &trans  &trans      &trans
 &trans        &trans        &trans        &trans  &trans  &trans                  &trans  &bt BT_PRV  &trans  &bt BT_NXT  &trans      &trans
 &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans      &trans  &trans      &trans
                             &trans        &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP K_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };
    };
};
